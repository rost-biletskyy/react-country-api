{"version":3,"sources":["components/util/api.js","components/Search/SearchInput.jsx","components/FilterCountry/FilterCountry.jsx","components/AllCountries/AllCountries.jsx","components/CountryInfo/CountryInfo.jsx","App.js","index.js"],"names":["apiURL","SearchInput","onSearch","useState","input","setInput","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","FilterCountry","onSelect","regionName","className","AllCountries","countries","setCountries","isLoading","setIsLoading","error","setError","getAllCountries","a","fetch","res","ok","Error","json","data","message","getCountryByName","countryName","getCountryByRegion","useEffect","map","country","to","name","common","src","flags","png","alt","Intl","NumberFormat","format","population","region","capital","CountryInfo","setCountry","useParams","index","subregion","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45b53205.chunk.js","sourcesContent":["export const apiURL = \"https://restcountries.com/v3.1\";\n","import React, { useState } from \"react\";\n\nconst SearchInput = ({ onSearch }) => {\n  const [input, setInput] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    onSearch(input);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        placeholder=\"Search a country...\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default SearchInput;\n","import React from \"react\";\n\nconst FilterCountry = ({ onSelect }) => {\n  const selectHandler = (e) => {\n    const regionName = e.target.value;\n    onSelect(regionName);\n  };\n\n  return (\n    <select onChange={selectHandler}>\n      <option className=\"option\">Filter by Region</option>\n      <option className=\"option\" value=\"Africa\">\n        Africa\n      </option>\n      <option className=\"option\" value=\"America\">\n        America\n      </option>\n      <option className=\"option\" value=\"Asia\">\n        Asia\n      </option>\n      <option className=\"option\" value=\"Europe\">\n        Europe\n      </option>\n      <option className=\"option\" value=\"Oceania\">\n        Oceania\n      </option>\n    </select>\n  );\n};\n\nexport default FilterCountry;\n","import React, { useState, useEffect } from \"react\";\nimport { apiURL } from \"../util/api\";\n\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\n\nimport { Link } from \"react-router-dom\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const getAllCountries = async () => {\n    try {\n      const res = await fetch(`${apiURL}/all`);\n\n      if (!res.ok) throw new Error(\"Something went wrong!\");\n\n      const data = await res.json();\n\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByName = async (countryName) => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`);\n\n      if (!res.ok) throw new Error(\"Not found any country!\");\n\n      const data = await res.json();\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByRegion = async (regionName) => {\n    try {\n      const res = await fetch(`${apiURL}/region/${regionName}`);\n\n      if (!res.ok) throw new Error(\"Failed..........\");\n\n      const data = await res.json();\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n\n  return (\n    <div className=\"all__country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName} />\n        </div>\n\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion} />\n        </div>\n      </div>\n\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading...</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {countries?.map((country) => (\n          <Link to={`/country/${country.name.common}`}>\n            <div className=\"country__card\">\n              <div className=\"country__img\">\n                <img src={country.flags.png} alt=\"\" />\n              </div>\n\n              <div className=\"country__data\">\n                <h3>{country.name.common}</h3>\n                <h6>\n                  {\" \"}\n                  Population:{\" \"}\n                  {new Intl.NumberFormat().format(country.population)}\n                </h6>\n                <h6> Region: {country.region}</h6>\n                <h6> Capital: {country.capital}</h6>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AllCountries;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiURL } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\n\nconst CountryInfo = () => {\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { countryName } = useParams();\n\n  useEffect(() => {\n    const getCountryByName = async () => {\n      try {\n        const res = await fetch(`${apiURL}/name/${countryName}`);\n\n        if (!res.ok) throw new Error(\"Could not found!\");\n\n        const data = await res.json();\n\n        setCountry(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n\n    getCountryByName();\n  }, [countryName]);\n\n  return (\n    <div className=\"country__info__wrapper\">\n      <button>\n        <Link to=\"/\">Back</Link>\n      </button>\n\n      {isLoading && !error && <h4>Loading...</h4>}\n      {error && !isLoading && { error }}\n\n      {country?.map((country, index) => (\n        <div className=\"country__info__container\" key={index}>\n          <div className=\"country__info-img\">\n            <img src={country.flags.png} alt=\"\" />\n          </div>\n\n          <div className=\"country__info\">\n            <h3>{country.name.common}</h3>\n\n            <div className=\"country__info-left\">\n              <h5>\n                Population:{\" \"}\n                <span>\n                  {new Intl.NumberFormat().format(country.population)}\n                </span>\n              </h5>\n              <h5>\n                Region: <span>{country.region}</span>\n              </h5>\n              <h5>\n                Sub Region: <span>{country.subregion}</span>\n              </h5>\n              <h5>\n                Capital: <span>{country.capital}</span>\n              </h5>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CountryInfo;\n","import \"./app.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport AllCountries from \"./components/AllCountries/AllCountries\";\nimport CountryInfo from \"./components/CountryInfo/CountryInfo\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"container\">\n          <h5>React task</h5>\n        </div>\n      </div>\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<AllCountries />} />\n          <Route path=\"/country/:countryName\" element={<CountryInfo />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}